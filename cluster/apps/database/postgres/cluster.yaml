---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
  namespace: database
  annotations:
    kyverno.io/ignore: "true"
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:17.2-4
  inheritedMetadata:
    labels:
      kube-image-keeper.enix.io/image-caching-policy: ignore
  primaryUpdateStrategy: unsupervised
  resources:
    requests: &resources
      cpu: 1
      memory: "1Gi"
    limits: *resources
  storage:
    size: 100Gi
    storageClass: longhorn-single
  superuserSecret:
    name: superuser-secret
  enableSuperuserAccess: true
  bootstrap:
    # recovery:
    #  source: &previousCluster postgres-v9
    initdb:
      import:
        type: monolith
        databases: ['*']
        roles: ['*']
        source:
          externalCluster: postgres16
  priorityClassName: high-priority
  affinity:
    nodeSelector:
      kubernetes.io/arch: "arm64"
  postgresql:
    parameters:
      max_connections: "600"
      shared_buffers: 512MB
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: "30d"
    barmanObjectStore:
      wal:
        compression: bzip2
        maxParallel: 4
      destinationPath: s3://hef-cpng/
      endpointURL: https://${SECRET_CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com
      serverName: &currentCluster postgres-v11
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    # - name: *previousCluster
    #   barmanObjectStore:
    #     wal:
    #       compression: bzip2
    #       maxParallel: 8
    #     destinationPath: s3://hef-cpng/
    #     endpointURL: https://${SECRET_CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com
    #     s3Credentials:
    #       accessKeyId:
    #         name: cloudnative-pg-secret
    #         key: aws-access-key-id
    #       secretAccessKey:
    #         name: cloudnative-pg-secret
    #         key: aws-secret-access-key
    - name: postgres16
      connectionParameters:
        host: postgres16-rw
        user: postgres
      password:
        name: superuser-secret
        key: password
