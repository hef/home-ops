---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres16
  namespace: database
spec:
  instances: 1
  imageName: ghcr.io/cloudnative-pg/postgresql:16.4-51
  primaryUpdateStrategy: unsupervised
  resources:
    requests: &resources
      cpu: 1
      memory: "1Gi"
    limits: *resources
  storage:
    size: 100Gi
    storageClass: longhorn
  superuserSecret:
    name: superuser-secret
  enableSuperuserAccess: true
  bootstrap:
    recovery:
      source: &previousCluster postgres-v9
  postgresql:
    parameters:
      max_connections: "600"
      shared_buffers: 512MB
  monitoring:
    enablePodMonitor: true
  #backup:
  #  retentionPolicy: 30d
  #  barmanObjectStore:
  #    wal:
  #      compression: bzip2
  #      maxParallel: 4
  #    destinationPath: s3://hef-cpng/
  #    endpointURL: https://${SECRET_CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com
  #    serverName: &currentCluster postgres16-v8
  #    s3Credentials:
  #      accessKeyId:
  #        name: cloudnative-pg-secret
  #        key: aws-access-key-id
  #      secretAccessKey:
  #        name: cloudnative-pg-secret
  #        key: aws-secret-access-key
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: *previousCluster
      barmanObjectStore:
        wal:
          compression: bzip2
          maxParallel: 8
        destinationPath: s3://hef-cpng/
        endpointURL: https://${SECRET_CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com
        s3Credentials:
          accessKeyId:
            name: cloudnative-pg-secret
            key: aws-access-key-id
          secretAccessKey:
            name: cloudnative-pg-secret
            key: aws-secret-access-key
