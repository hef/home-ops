apiVersion: v1
kind: ConfigMap
metadata:
  name: pgadmin-config
  namespace: default
data:
  TZ: ${SECRET_TZ}
  # quirk of the env to config_distro.py process: a bunch of these need to be stringified with `'` before becoming python
  config_local.py: |
    import logging
    import os
    CONSOLE_LOG_LEVEL = logging.DEBUG
    # without MASTER_PASSWORD_REQUIRED, pgadmin won't save DB passwords
    MASTER_PASSWORD_REQUIRED = True
    CONFIG_DATABASE_URI = "postgresql://pgadmin:{password}@postgres-rw.database.svc.cluster.local:5432/pgadmin".format(
      password=os.environ['password'],
    )
    AUTHENTICATION_SOURCES = ['oauth2']
    OAUTH2_CONFIG = [
      {
        'OAUTH2_NAME': '${SECRET_DOMAIN}',
        'OAUTH2_DISPLAY_NAME': 'auth.${SECRET_DOMAIN}',
        'OAUTH2_CLIENT_ID': 'pgadmin',
        'OAUTH2_CLIENT_SECRET': os.environ['OAUTH2_CLIENT_SECRET'],
        'OAUTH2_TOKEN_URL': 'https://auth.${SECRET_DOMAIN}/api/oidc/token',
        'OAUTH2_AUTHORIZATION_URL': 'https://auth.${SECRET_DOMAIN}/api/oidc/authorization',
        'OAUTH2_SERVER_METADATA_URL': 'https://auth.${SECRET_DOMAIN}/.well-known/openid-configuration',
        'OAUTH2_API_BASE_URL': None,
        'OAUTH2_USERINFO_ENDPOINT': 'https://auth.${SECRET_DOMAIN}/api/oidc/userinfo',
        'OAUTH2_SCOPE': 'openid profile email groups',
        'OAUTH2_USERNAME_CLAIM': None,
        'OAUTH2_ICON': 'fa-sign-in-alt',
        'OAUTH2_BUTTON_COLOR': '#0000ff',
        'OAUTH2_ADDITIONAL_CLAIMS': None,
        'OAUTH2_SSL_CERT_VERIFICATION': False,
      }
    ]
    OAUTH2_AUTO_CREATE_USER: True
